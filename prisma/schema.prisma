
generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  email         String     @unique
  name          String
  password      String
  role          Role       @default(USER)
  bookings      Booking[]  @relation("BookingAsRenter")
  listingAgent  Booking[]  @relation("BookingsAsAgent")
  listings      Listing[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Listing {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  createdById    String
  createdBy      User       @relation(fields: [createdById], references: [id], onUpdate: Restrict)
  name           String
  description    String
  location       String
  pricePerNight  Float
  reservedDates  DateTime[]
  bookings       Booking[]
  createdAt      DateTime   @default(now())  
  updatedAt      DateTime   @updatedAt
}

model Booking {
id              String     @id @default(auto()) @map("_id") @db.ObjectId
listingId       String
listing         Listing    @relation(fields: [listingId], references: [id], onDelete: Cascade)
listingAgentId  String
listingAgent    User       @relation("BookingsAsAgent", fields: [listingAgentId], references: [id])
renterId        String
renter          User       @relation("BookingAsRenter", fields: [renterId], references: [id])
createdAt       DateTime   @default(now())
checkin_date    DateTime
checkout_date   DateTime
total_cost      Float
status          Status     @default(PENDING)
}

enum Role {
  USER
  ADMIN
}

enum Status {
  PENDING
  ACCEPTED
  DENIED
}
 
 